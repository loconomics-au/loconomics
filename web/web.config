<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections />
  <appSettings>
    <!-- To distinguish between: dev (master), testing, live -->
    <add key="Channel" value="localdev" />
    <add key="LogSuccessSendMail" value="false" />
    <add key="enableSimpleMembership" value="true" />
    <!-- Braintree configurations -->
    <add key="Braintree.InSandbox" value="true" />
    <add key="Braintree.Sandbox.MerchantId" value="" />
    <add key="Braintree.Sandbox.PublicKey" value="" />
    <add key="Braintree.Sandbox.PrivateKey" value="" />
    <add key="Braintree.Sandbox.MerchantAccountId" value="" />
    <add key="Braintree.Production.MerchantId" value="" />
    <add key="Braintree.Production.PublicKey" value="" />
    <add key="Braintree.Production.PrivateKey" value="" />
    <add key="Braintree.Production.MerchantAccountId" value="" />
    <add key="Braintree.FraudProtectionTools.Enabled" value="true" />
    <!-- Stripe configurations -->
    <add key="Stripe.ApiKey" value="" />
    <add key="Stripe.PublicKey" value="" />
    <add key="Stripe.RefreshUrl" value="" />
    <add key="Stripe.ReturnUrl" value="" />
    <!-- Facebook config -->
    <add key="facebookAppId" value="" />
    <add key="facebookAppSecret" value="" />
    <!-- Google maps config-->
    <add key="googleMapsPrivateKey" value="" />
    <!-- Github pages config-->
    <add key="pagesOwnerRepo" value="loconomics-au/coop-website" />
    <!-- At Azure, set the value of this app-setting to hold password securely, and not at system.net-smtp, like connectionStrings -->
    <!-- At 'localdev' channel, send an email is disabled by code (see LcMessaging.SendMail) but some data, even dummy, is required to prevent crash at some fields -->
    <add key="smtpUserName" value="" />
    <add key="smtpPassword" value="" />
    <add key="smtpFrom" value="" />
    <add key="smtpHost" value="localhost" />
    <add key="smtpPort" value="" />
    <add key="smtpEnableSsl" value="" />
    <!-- system emails -->
    <add key="automatedEmail" value="info@loconomics.com.au" />
    <!-- i18n settings-->
    <add key="i18n.DirectoriesToScan" value="" />
    <add key="i18n.AvailableLanguages" value="en-AU" />
    <add key="i18n.WhiteList" value="*.html;*.cs;*.cshtml;*.sitemap;*.json" />
    <add key="i18n.BlackList" value="database;devops;docs;iCalendarLib;packages;build;grunt;..\\app\\node_modules;phonegap;vendor;web\\assets;img;Scripts" />
    <add key="i18n.VisualizeMessages" value="false" />
    <add key="i18n.VisualizeLanguageSeparator" value=":" />
    <add key="i18n.NuggetVisualizeToken" value="![" />
    <add key="i18n.NuggetVisualizeEndToken" value="]!" />
    <!-- mock settings -->
    <add key="useMock" value="true" />
    <add key="mockEndpoint" value="https://3c9ac283-66c9-424e-bc17-865fd44df747.mock.pstmn.io" />
    <add key="appClientUrl" value="http://localhost/loconomics" />
  </appSettings>
  <connectionStrings>
    <add connectionString="Server=localhost\SQLEXPRESS;Database=loconomics;Integrated Security=SSPI" name="sqlloco" providerName="System.Data.SqlClient" />
    <!-- for CalendarDll -->
    <add name="loconomicsEntities" connectionString="metadata=res://*/Data.loconomics.csdl|res://*/Data.loconomics.ssdl|res://*/Data.loconomics.msl;provider=System.Data.SqlClient;provider connection string=&quot;Server=localhost\SQLEXPRESS;Database=loconomics;Integrated Security=SSPI;multipleactiveresultsets=True;application name=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <system.web>
    <customErrors mode="Off" defaultRedirect="~/Errors/Error.cshtml" redirectMode="ResponseRewrite">
      <error statusCode="404" redirect="~/Errors/Error404.cshtml" />
    </customErrors>
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="System.Net, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
      </assemblies>
    </compilation>
    <roleManager enabled="true" cacheRolesInCookie="true" defaultProvider="QuickStartRoleManagerSqlProvider" cookieName=".ASPXROLES" cookiePath="/" cookieTimeout="30" cookieRequireSSL="false" cookieSlidingExpiration="true" createPersistentCookie="false" cookieProtection="All">
      <providers>
        <add name="QuickStartRoleManagerSqlProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="sqlloco" applicationName="SecurityQuickStart" />
      </providers>
    </roleManager>
    <!-- We use this timeout (60 minutes) as the non-persistent session timeout (its not standard) -->
    <sessionState mode="InProc" timeout="60" cookieName="lcSessionID" cookieless="UseCookies" />
    <authentication mode="Forms">
      <!-- We use this timeout for persistent user sessions ('remember me' checkbox).
        Is the minimum inactivity time needed to force user to login again, with persistent option.
        1 month = 43200 minutes.
        Asp.net share this for non-persistent sessions ('remember me' not checked), but we have a 
        code on global.asax/session_start to force non-persistent cookies die and force user to login again.
        This last means, sessionState/timeout is the non-persistent session timeout! (its not standard) -->
      <forms name="lcAuth" timeout="43200" />
    </authentication>
    <trace enabled="true" />
    <httpRuntime executionTimeout="90" maxRequestLength="4096" />
  </system.web>
  <system.webServer>
    <modules>
      <remove name="WebDAVModule" />
      <add name="i18n.LocalizingModule" type="i18n.LocalizingModule, i18n" />
    </modules>
    <handlers>
      <!-- IMPORTANT! NEXT IS TO ENABLE HTTP METHODS PUT AND DELETE IN ORDER TO IMPLEMENT THE RESTful API.
          THIS IS NEED ONLY ON MACHINES WITH IIS 7.5, USUALLY WINDOWS-7 FOR LOCAL DEVELOPMENT,
          WHILE THE SERVER IS USING IIS 8 THAT HAS THAT METHODS ENABLED BY DEFAULT (no requiring
          this on the uploaded web.configs, is just a local config).
          IS REQUIRED TO REMOVE THE WEBDAV MODULE TOO (or to look for a way to disabled it for this app in local dev machine) -->
      <remove name="WebDAV" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE" modules="IsapiModule" scriptProcessor="c:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="Script" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE" type="System.Web.Handlers.TransferRequestHandler" resourceType="Unspecified" requireAccess="Script" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <directoryBrowse enabled="false" />
    <!-- RULES for the app as in web.root.config (not subdomain rules) for development, in hosting this rules must go on root, not testing or live configs -->
    <rewrite>
      <rules>
        <!-- Maintenance mode -->
        <rule name="maintenance-mode" enabled="false" stopProcessing="true">
          <match url="(.*)" ignoreCase="true" />
          <action type="Rewrite" url="/maintenance.html" />
        </rule>
        <rule name="Filename-based cache busting">
          <match url="^(.+)\.\d+(\.(js|css|png|jpg|gif|ico)$)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="{R:1}{R:2}" />
        </rule>
        <rule name="Welcome/landing pages - No extension needed for plain html files">
          <match url="^(welcome\/.+$)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="{R:1}.html" />
        </rule>
      </rules>
    </rewrite>
    <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" minFileSizeForComp="128">
      <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll" />
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="application/json" enabled="true" />
        <add mimeType="*/*" enabled="false" />
      </staticTypes>
    </httpCompression>
    <urlCompression doStaticCompression="false" doDynamicCompression="false" />
    <staticContent>
      <clientCache cacheControlCustom="public" cacheControlMaxAge="370.00:00:00" cacheControlMode="UseMaxAge" />
      <remove fileExtension=".css" />
      <mimeMap fileExtension=".css" mimeType="text/css" />
      <remove fileExtension=".js" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <remove fileExtension=".rss" />
      <mimeMap fileExtension=".rss" mimeType="application/rss+xml; charset=UTF-8" />
      <remove fileExtension=".html" />
      <mimeMap fileExtension=".html" mimeType="text/html; charset=UTF-8" />
      <remove fileExtension=".xml" />
      <mimeMap fileExtension=".xml" mimeType="application/xml; charset=UTF-8" />
      <remove fileExtension=".mp4" />
      <mimeMap fileExtension=".mp4" mimeType="video/mp4" />
      <remove fileExtension=".m4v" />
      <mimeMap fileExtension=".m4v" mimeType="video/m4v" />
      <remove fileExtension=".ogg" />
      <mimeMap fileExtension=".ogg" mimeType="video/ogg" />
      <remove fileExtension=".ogv" />
      <mimeMap fileExtension=".ogv" mimeType="video/ogg" />
      <remove fileExtension=".webm" />
      <mimeMap fileExtension=".webm" mimeType="video/webm" />
      <remove fileExtension=".svg" />
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
      <remove fileExtension=".svgz" />
      <mimeMap fileExtension=".svgz" mimeType="image/svg+xml" />
      <remove fileExtension=".eot" />
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject" />
      <remove fileExtension=".otf" />
      <mimeMap fileExtension=".otf" mimeType="font/otf" />
      <remove fileExtension=".woff" />
      <mimeMap fileExtension=".woff" mimeType="font/x-woff" />
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
    </staticContent>
    <httpProtocol>
      <customHeaders>
        <remove name="Access-Control-Allow-Origin" />
        <remove name="Access-Control-Allow-Headers" />
        <remove name="Access-Control-Allow-Methods" />
        <add name="Access-Control-Allow-Origin" value="*" />
        <!-- iOS WkWebView require extra headers to be validated (accept-encoding,origin,accept-language) while others don't ask for this
        because are included in the 'basic profile' that does not require CORS. -->
        <add name="Access-Control-Allow-Headers" value="Content-Type,alk,alu,Authorization,accept-encoding,origin,accept-language,UseMock" />
        <add name="Access-Control-Allow-Methods" value="GET, POST, OPTIONS, PUT, DELETE" />
        <remove name="X-Powered-By" />
        <remove name="X-AspNetWebPages-Version" />
        <remove name="X-AspNet-Version" />
      </customHeaders>
    </httpProtocol>
    <security>
      <requestFiltering>
        <hiddenSegments>
          <add segment="_specialRoutes" />
          <add segment="_logs" />
          <add segment="_DBUpdate" />
          <add segment="_detachedThings" />
        </hiddenSegments>
      </requestFiltering>
    </security>
    <httpErrors errorMode="DetailedLocalOnly" existingResponse="PassThrough" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.WebData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.Data" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.InteropServices.RuntimeInformation" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.0" newVersion="4.0.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.codedom>
    <compilers>
      <compiler extension=".cs" language="c#;cs;csharp" warningLevel="4" compilerOptions="/langversion:7.0 /nowarn:1659;1699;1701;612;618" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=3.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      <compiler extension=".vb" language="vb;vbs;visualbasic;vbscript" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008,40000,40008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=3.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    </compilers>
  </system.codedom>
</configuration>