<?xml version="1.0"?>
<configuration>

  <appSettings>

    <!-- IMPORTANT: Every empty value in next settings MUST BE SET at hosting level / environment var
        All sensitive data MUST be set that way.
        Other existent values can be replaced at hosting settings too, but with a workable preset here.
    -->

    <!-- To distinguish between: dev (master), testing, live -->
    <add key="Channel" value="live" />

    <add key="LogSuccessSendMail" value="true"/>
    
    <add key="enableSimpleMembership" value="true"/>

    <!-- Braintree configurations -->
    <add key="Braintree.InSandbox" value="false"/>
    <add key="Braintree.Sandbox.MerchantId" value="" />
    <add key="Braintree.Sandbox.PublicKey" value="" />
    <add key="Braintree.Sandbox.PrivateKey" value="" />
    <add key="Braintree.Sandbox.MerchantAccountId" value=""/>
    <add key="Braintree.Production.MerchantId" value=""/>
    <add key="Braintree.Production.PublicKey" value=""/>
    <add key="Braintree.Production.PrivateKey" value=""/>
    <add key="Braintree.Production.MerchantAccountId" value=""/>
    <add key="Braintree.FraudProtectionTools.Enabled" value="true"/>

    <!-- Facebook config -->
    <add key="facebookAppId" value=""/>
    <add key="facebookAppSecret" value=""/>
    
    <!-- At Azure, set the value of this app-setting to hold password securely, and not at system.net-smtp, like connectionStrings -->
    <add key="smtpUserName" value="" />
    <add key="smtpPassword" value="" />
    <add key="smtpFrom" value="" />
    <add key="smtpHost" value="" />
    <add key="smtpPort" value="" />
    <add key="smtpEnableSsl" value="" />

  </appSettings>
  
  <connectionStrings>
    <clear />
    <!-- IMPORTANT: this settings MUST exists and have some value, even if dummy to do not break all the site -->
    <add name="LocalSqlServer" connectionString="Data Source=tcp:sql.discountasp.net;Initial Catalog=SQL_numid_account;User ID=SQL_numid_user;Password=pw_here" providerName="System.Data.SqlClient"/>

    <!-- ENVIRONMENT SETTING: the final setting is set-up at the hosting with the password -->
    <add connectionString="" name="sqlloco" providerName="System.Data.SqlClient"/>
    <!-- for CalendarDll: the same sqlloco connectionstring but adapted to EntityFramework, replace the __connection_string__ with it (some additional parameters are added here).
      At Azure, needs to setup the connectionString type as 'custom' and this need to exists here at the web.config to work with the providerName correctly set.
      Just use the next connectionString with password and replacing the quot entities -->
    <add name="loconomicsEntities" connectionString="metadata=res://*/Data.loconomics.csdl|res://*/Data.loconomics.ssdl|res://*/Data.loconomics.msl;provider=System.Data.SqlClient;provider connection string=&quot;__connection_string__;multipleactiveresultsets=True;application name=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SqlServerCe.4.0"/>
      <remove invariant="MySql.Data.MySqlClient"/>
      <add invariant="System.Data.SqlServerCe.4.0" name="Microsoft® SQL Server® Compact 4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"/>
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.3.7.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d"/>
    </DbProviderFactories>
  </system.data>
  <system.web>
    <roleManager enabled="true" cacheRolesInCookie="true" defaultProvider="QuickStartRoleManagerSqlProvider" cookieName=".ASPXROLES" cookiePath="/" cookieTimeout="30" cookieRequireSSL="false" cookieSlidingExpiration="true" createPersistentCookie="false" cookieProtection="All">
      <providers>
        <add name="QuickStartRoleManagerSqlProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="sqlloco" applicationName="SecurityQuickStart"/>
      </providers>
    </roleManager>

    <customErrors mode="On"></customErrors>
    <trace enabled="false" localOnly="false"/>
    <compilation debug="false"/>

    <!-- We use this timeout (60 minutes) as the non-persistent session timeout (its not standard) -->
    <sessionState mode="InProc"
                  timeout="60"
                  cookieName="lcSessionID"
                  cookieless="UseCookies"/>
    <authentication mode="Forms">
      <!-- We use this timeout for persistent user sessions ('remember me' checkbox).
        Is the minimum inactivity time needed to force user to login again, with persistent option.
        1 month = 43200 minutes.
        Asp.net share this for non-persistent sessions ('remember me' not checked), but we have a 
        code on global.asax/session_start to force non-persistent cookies die and force user to login again.
        This last means, sessionState/timeout is the non-persistent session timeout! (its not standard) -->
      <forms name="lcAuth"
        timeout="43200" />
    </authentication>
    <trust level="Full" />

  </system.web>
  <system.webServer>
    <directoryBrowse enabled="false" />
    <security>
      <requestFiltering>
        <fileExtensions>
          <remove fileExtension=".cshtml"/>
          <add fileExtension=".cshtml" allowed="true"/>
        </fileExtensions>
        <hiddenSegments>
          <add segment="_specialRoutes" />
          <add segment="_logs" />
          <add segment="_DBUpdate" />
          <add segment="_detachedThings" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" minFileSizeForComp="128">
      <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll" />
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="application/json" enabled="true" />
        <add mimeType="*/*" enabled="false" />
      </staticTypes>
    </httpCompression>
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />

    <staticContent>
      <clientCache cacheControlCustom="public" cacheControlMaxAge="370.00:00:00" cacheControlMode="UseMaxAge"/>
      <remove fileExtension=".css"/>
      <mimeMap fileExtension=".css" mimeType="text/css"/>
      <remove fileExtension=".js"/>
      <mimeMap fileExtension=".js" mimeType="application/javascript"/>
      <remove fileExtension=".json"/>
      <mimeMap fileExtension=".json" mimeType="application/json"/>
      <remove fileExtension=".rss"/>
      <mimeMap fileExtension=".rss" mimeType="application/rss+xml; charset=UTF-8"/>
      <remove fileExtension=".html"/>
      <mimeMap fileExtension=".html" mimeType="text/html; charset=UTF-8"/>
      <remove fileExtension=".xml"/>
      <mimeMap fileExtension=".xml" mimeType="application/xml; charset=UTF-8"/>
      <remove fileExtension=".mp4"/>
      <mimeMap fileExtension=".mp4" mimeType="video/mp4"/>
      <remove fileExtension=".m4v"/>
      <mimeMap fileExtension=".m4v" mimeType="video/m4v"/>
      <remove fileExtension=".ogg"/>
      <mimeMap fileExtension=".ogg" mimeType="video/ogg"/>
      <remove fileExtension=".ogv"/>
      <mimeMap fileExtension=".ogv" mimeType="video/ogg"/>
      <remove fileExtension=".webm"/>
      <mimeMap fileExtension=".webm" mimeType="video/webm"/>
      <remove fileExtension=".svg"/>
      <mimeMap fileExtension=".svg" mimeType="image/svg+xml"/>
      <remove fileExtension=".svgz"/>
      <mimeMap fileExtension=".svgz" mimeType="image/svg+xml"/>
      <remove fileExtension=".eot"/>
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject"/>
      <remove fileExtension=".otf"/>
      <mimeMap fileExtension=".otf" mimeType="font/otf"/>
      <remove fileExtension=".woff"/>
      <mimeMap fileExtension=".woff" mimeType="font/x-woff"/>
      <remove fileExtension=".woff2"/>
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
    </staticContent>
    <httpErrors existingResponse="PassThrough">
        <remove statusCode="404" subStatusCode="-1" />
        <error statusCode="404" prefixLanguageFilePath="" path="/Errors/Error404/" responseMode="ExecuteURL" />
    </httpErrors>
    <!-- Not sure why this was added to web.root.config file originally, maybe when migrating to Azure and related with following line? -->
    <validation validateIntegratedModeConfiguration="false"/>
    <!-- REQUIRED FOR AZURE: it enables HTTP methods PUT and DELETE to work under Azure; not needed on other hostings like Winhost -->
    <modules runAllManagedModulesForAllRequests="true"/>

    <httpProtocol>
      <customHeaders>
        <remove name="Access-Control-Allow-Origin" />
        <remove name="Access-Control-Allow-Headers" />
        <remove name="Access-Control-Allow-Methods" />
        <add name="Access-Control-Allow-Origin" value="*" />
        <!-- iOS WkWebView require extra headers to be validated (accept-encoding,origin,accept-language) while others don't ask for this
        because are included in the 'basic profile' that does not require CORS. -->
        <add name="Access-Control-Allow-Headers" value="Content-Type,alk,alu,Authorization,accept-encoding,origin,accept-language" />
        <add name="Access-Control-Allow-Methods" value="GET,POST,OPTIONS,PUT,DELETE"/>
        <remove name="X-Powered-By" />
        <remove name="X-AspNetWebPages-Version" />
        <remove name="X-AspNet-Version" />
      </customHeaders>
    </httpProtocol>

    <rewrite>
      <rules>
        <clear />

        <!-- Maintenance mode -->
        <rule name="maintenance-mode" enabled="false" stopProcessing="true">
          <match url="(.*)" ignoreCase="true" />
          <action type="Rewrite" url="/maintenance.html" />
        </rule>

        <!-- Apply to all the site (cannot be enabled per app-channel) -->
        <rule name="Filename-based cache busting">
          <match url="^(.+)\.\d+(\.(js|css|png|jpg|gif|ico)$)" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="{R:1}{R:2}" />
        </rule>

        <!-- General HTTP to HTTPS redirect only for live site -->
        <rule name="HTTP to HTTPS redirect" stopProcessing="true">
          <match url="(.*)" />
          <conditions logicalGrouping="MatchAll">
            <add input="{HTTPS}" pattern="off" ignoreCase="true" />
            <add input="{HTTP_HOST}" pattern="^(www\.)?loconomics\.com$" ignoreCase="true" />
          </conditions>
          <action type="Redirect" redirectType="Found" url="https://loconomics.com/{R:1}" /> 
        </rule>

        <!-- Just one domain/entry point: redirect 'www.' to canonical domain -->
        <rule name="WWW to domain redirect" stopProcessing="true">
          <match url="(.*)" />
          <conditions logicalGrouping="MatchAll">
            <add input="{HTTPS}" pattern="on" ignoreCase="true" />
            <add input="{HTTP_HOST}" pattern="^www\.loconomics\.com\.au$" ignoreCase="true" />
          </conditions>
          <action type="Redirect" redirectType="Found" url="https://loconomics.com.au/{R:1}" />
        </rule>

        <!-- Landing pages -->
        <rule name="Welcome/landing pages - No extension needed for plain html files">
          <match url="^(welcome\/.+$)"/>
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true"/>
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true"/>
          </conditions>
          <action type="Rewrite" url="{R:1}.html"/>
        </rule>

      </rules>
    </rewrite>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.WebData" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.Data" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

</configuration>